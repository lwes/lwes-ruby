backport of several things from lwes trunk

* ESF error handling (r344)
* empty events in ESFs (inherited fields only) (r307)

https://lwes.svn.sourceforge.net/svnroot/lwes/lwes/trunk

diff -rup a/src/lwes_esf_parser_y.y b/src/lwes_esf_parser_y.y
--- a/src/lwes_esf_parser_y.y
+++ b/src/lwes_esf_parser_y.y
@@ -63,8 +63,10 @@ eventname: EVENTWORD  {
   
     ;
 
-attributelist: attribute
-    |   attributelist attribute
+attributelist:
+      /* empty */
+    | attribute
+    | attributelist attribute
     ;
 
 attribute: type attributename ';'
@@ -221,6 +223,7 @@ lwes_parse_esf
   else
   {
     fprintf (stderr,"ERROR: No such file : \"%s\"\n",filename);
+    state.errors++;
   }
 
   if (state.errors)
diff -rup a/src/lwes_event_type_db.c b/src/lwes_event_type_db.c
--- a/src/lwes_event_type_db.c
+++ b/src/lwes_event_type_db.c
@@ -36,7 +36,11 @@ lwes_event_type_db_create
       db->events = lwes_hash_create ();
       if (db->events != NULL)
         {
-          lwes_parse_esf (db, db->esf_filename);
+          if (lwes_parse_esf (db, db->esf_filename) != 0)
+            {
+              free (db);
+              db = NULL;
+            }
         }
       else
         {
diff -rup a/src/lwes_esf_parser_y.c b/src/lwes_esf_parser_y.c
--- a/src/lwes_esf_parser_y.c
+++ b/src/lwes_esf_parser_y.c
@@ -387,7 +387,7 @@ union yyalloc
 /* YYNNTS -- Number of nonterminals.  */
 #define YYNNTS  8
 /* YYNRULES -- Number of rules.  */
-#define YYNRULES  23
+#define YYNRULES  24
 /* YYNRULES -- Number of states.  */
 #define YYNSTATES  32
 
@@ -435,9 +435,9 @@ static const yytype_uint8 yytranslate[] =
    YYRHS.  */
 static const yytype_uint8 yyprhs[] =
 {
-       0,     0,     3,     5,     8,    13,    16,    19,    21,    23,
-      26,    30,    35,    40,    42,    44,    46,    48,    50,    52,
-      54,    56,    58,    60
+       0,     0,     3,     5,     8,    13,    16,    19,    21,    22,
+      24,    27,    31,    36,    41,    43,    45,    47,    49,    51,
+      53,    55,    57,    59,    61
 };
 
 /* YYRHS -- A `-1'-separated list of the rules' RHS.  */
@@ -445,19 +445,19 @@ static const yytype_int8 yyrhs[] =
 {
       18,     0,    -1,    19,    -1,    18,    19,    -1,    20,    14,
       21,    15,    -1,     1,    16,    -1,     1,    15,    -1,    12,
-      -1,    22,    -1,    21,    22,    -1,    24,    23,    16,    -1,
-      24,    23,     1,    16,    -1,    24,    23,     1,    15,    -1,
-      13,    -1,     3,    -1,     4,    -1,     5,    -1,     6,    -1,
-      10,    -1,    11,    -1,     7,    -1,     8,    -1,     9,    -1,
-      13,    -1
+      -1,    -1,    22,    -1,    21,    22,    -1,    24,    23,    16,
+      -1,    24,    23,     1,    16,    -1,    24,    23,     1,    15,
+      -1,    13,    -1,     3,    -1,     4,    -1,     5,    -1,     6,
+      -1,    10,    -1,    11,    -1,     7,    -1,     8,    -1,     9,
+      -1,    13,    -1
 };
 
 /* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
 static const yytype_uint8 yyrline[] =
 {
-       0,    35,    35,    36,    39,    47,    48,    51,    66,    67,
-      70,    71,    72,    75,    93,   104,   115,   125,   135,   145,
-     155,   165,   175,   185
+       0,    35,    35,    36,    39,    47,    48,    51,    66,    68,
+      69,    72,    73,    74,    77,    95,   106,   117,   127,   137,
+     147,   157,   167,   177,   187
 };
 #endif
 
@@ -488,16 +488,16 @@ static const yytype_uint16 yytoknum[] =
 static const yytype_uint8 yyr1[] =
 {
        0,    17,    18,    18,    19,    19,    19,    20,    21,    21,
-      22,    22,    22,    23,    24,    24,    24,    24,    24,    24,
-      24,    24,    24,    24
+      21,    22,    22,    22,    23,    24,    24,    24,    24,    24,
+      24,    24,    24,    24,    24
 };
 
 /* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
 static const yytype_uint8 yyr2[] =
 {
-       0,     2,     1,     2,     4,     2,     2,     1,     1,     2,
-       3,     4,     4,     1,     1,     1,     1,     1,     1,     1,
-       1,     1,     1,     1
+       0,     2,     1,     2,     4,     2,     2,     1,     0,     1,
+       2,     3,     4,     4,     1,     1,     1,     1,     1,     1,
+       1,     1,     1,     1,     1
 };
 
 /* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
@@ -506,9 +506,9 @@ static const yytype_uint8 yyr2[] =
 static const yytype_uint8 yydefact[] =
 {
        0,     0,     7,     0,     2,     0,     6,     5,     1,     3,
-       0,    14,    15,    16,    17,    20,    21,    22,    18,    19,
-      23,     0,     8,     0,     4,     9,    13,     0,     0,    10,
-      12,    11
+       8,    15,    16,    17,    18,    21,    22,    23,    19,    20,
+      24,     0,     9,     0,     4,    10,    14,     0,     0,    11,
+      13,    12
 };
 
 /* YYDEFGOTO[NTERM-NUM].  */
@@ -1414,18 +1414,18 @@ yyreduce:
                       }
     break;
 
-  case 11:
-#line 71 "lwes_esf_parser_y.y"
+  case 12:
+#line 73 "lwes_esf_parser_y.y"
     { lweserror("Did you forget a ';'?"); }
     break;
 
-  case 12:
-#line 72 "lwes_esf_parser_y.y"
+  case 13:
+#line 74 "lwes_esf_parser_y.y"
     { lweserror("Did you forget a semi-colon?"); }
     break;
 
-  case 13:
-#line 75 "lwes_esf_parser_y.y"
+  case 14:
+#line 77 "lwes_esf_parser_y.y"
     {
         if (((struct lwes_parser_state *) param)->lastType != NULL)
         {
@@ -1444,8 +1444,8 @@ yyreduce:
                              }
     break;
 
-  case 14:
-#line 93 "lwes_esf_parser_y.y"
+  case 15:
+#line 95 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1459,8 +1459,8 @@ yyreduce:
                  }
     break;
 
-  case 15:
-#line 104 "lwes_esf_parser_y.y"
+  case 16:
+#line 106 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1474,8 +1474,8 @@ yyreduce:
                  }
     break;
 
-  case 16:
-#line 115 "lwes_esf_parser_y.y"
+  case 17:
+#line 117 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1488,8 +1488,8 @@ yyreduce:
                  }
     break;
 
-  case 17:
-#line 125 "lwes_esf_parser_y.y"
+  case 18:
+#line 127 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1502,8 +1502,8 @@ yyreduce:
                  }
     break;
 
-  case 18:
-#line 135 "lwes_esf_parser_y.y"
+  case 19:
+#line 137 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1516,8 +1516,8 @@ yyreduce:
                  }
     break;
 
-  case 19:
-#line 145 "lwes_esf_parser_y.y"
+  case 20:
+#line 147 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1530,8 +1530,8 @@ yyreduce:
                  }
     break;
 
-  case 20:
-#line 155 "lwes_esf_parser_y.y"
+  case 21:
+#line 157 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1544,8 +1544,8 @@ yyreduce:
                  }
     break;
 
-  case 21:
-#line 165 "lwes_esf_parser_y.y"
+  case 22:
+#line 167 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1558,8 +1558,8 @@ yyreduce:
                  }
     break;
 
-  case 22:
-#line 175 "lwes_esf_parser_y.y"
+  case 23:
+#line 177 "lwes_esf_parser_y.y"
     {
           /* allocate a string, and copy the type value into it */
           ((struct lwes_parser_state *) param)->lastType = strdup(lweslval);
@@ -1572,8 +1572,8 @@ yyreduce:
                  }
     break;
 
-  case 23:
-#line 185 "lwes_esf_parser_y.y"
+  case 24:
+#line 187 "lwes_esf_parser_y.y"
     { char buffer[256];
                       sprintf(buffer,"unknown type '%s'",lweslval); 
                       lweserror(buffer);
@@ -1797,7 +1797,7 @@ yyreturn:
 }
 
 
-#line 192 "lwes_esf_parser_y.y"
+#line 194 "lwes_esf_parser_y.y"
 
 
 extern FILE *lwesin;
@@ -1830,6 +1830,7 @@ lwes_parse_esf
   else
   {
     fprintf (stderr,"ERROR: No such file : \"%s\"\n",filename);
+    state.errors++;
   }
 
   if (state.errors)
